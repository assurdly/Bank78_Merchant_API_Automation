{
	"info": {
		"_postman_id": "92dd9871-cd38-4320-97f7-b61379f08a7a",
		"name": "Bank78 Virtual NUBAN",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Authorization",
			"item": [
				{
					"name": "Authorization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cebe1a17-77c9-4221-a285-ea460e7f2324",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2233a967-98ba-4cb4-9fde-ee313aca7522",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"token\", jsonData.access_token); \r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Access token is present in the response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token).to.exist;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Access token is a non-empty string\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token).to.be.a('string').and.to.not.be.empty;\r",
									"});\r",
									"pm.test(\"token type  equals 'Bearer'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token_type).to.be.a('string').and.to.eql(\"Bearer\");\r",
									"});\r",
									"pm.test(\"Scope equals 'api1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.scope).to.be.a('string').and.to.eql(\"api1\");\r",
									"});\r",
									"pm.test(\"token expires in 3600\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.expires_in).to.eql(3600);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "3e683152-6f46-4cee-9c9b-bad0e52a188b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{clientId}}",
									"type": "text",
									"disabled": true
								},
								{
									"key": "client_secret",
									"value": "{{clientSecret}}",
									"type": "text",
									"disabled": true
								},
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "circle@mailinator.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "@Testing123",
									"type": "text"
								},
								{
									"key": "client_id",
									"value": "ECBEECBC7CE5434DBA509B9375203EC1",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "E166C7F9E6EA4D899A499EE239FCD930",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/connect/token",
						"description": "Content-type: application/x-www-form-urlencoded"
					},
					"response": [
						{
							"id": "8f0712d4-02d5-4333-8973-1a6f85cd8d2f",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{authUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "792"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "7ab5970d-5eea-4a46-a78c-10bbce8d1d55"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "792"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "OY38lEFWDoEEYBA="
								},
								{
									"key": "x-amzn-Remapped-Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY2NjEzRENFNkVCQzBFNkNEODBCMzc1ODM5NjRDQjZBIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2OTk5NjYyMzcsImV4cCI6MTY5OTk2OTgzNywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTNENUM0OTRFQjk3RDcwOTlDQzZCNUVDNzRBMTc0NzMiLCJpYXQiOjE2OTk5NjYyMzcsInNjb3BlIjpbImFwaTEiXX0.lfmgkLXkxyx8p96_L_Wbvl_7fS1XaxGSLsXGbILoYShkvUWGvNw37DQ3SjVEWhbzOLKGeaaE0EuJSTnCDTc8IWBpEh7797E7dXoggF5SM-H6zuQs6LJ51z1IqJLcaxzOIoJc6PVY3NlcA2wyIzw7gRlw7tIS0SAe-hacm4PhtTUOf4R3ag1100uH60NPaM7UrezXRxGiXNO6lY30gMchrM0i8NW41j-Zzrr_Tb_PwPT9qlZBZWCK99PGCZnLhCgKNq5TbMXtDGJYYhzT7KmmNoS5rE4JjKHhfypcXBeJidOD7kca_irWhOd2UPExgygh4C_H6SsGugAY_vLXAiJGrw\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"api1\"\n}"
						}
					]
				},
				{
					"name": "Authorization - invalid client id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cebe1a17-77c9-4221-a285-ea460e7f2324",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2233a967-98ba-4cb4-9fde-ee313aca7522",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status('Bad Request');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Error in the response\", function () {\r",
									"    pm.expect(jsonData.error).to.exist;\r",
									"    pm.expect(jsonData.error).to.be.a('string');\r",
									"    pm.expect(jsonData.error).to.eq('invalid_client');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "600dd9b7-405c-457a-886c-b3cd8164ee8b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "2E9FDC132C2344148BEF79851B481590",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{clientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/connect/token",
						"description": "Content-type: application/x-www-form-urlencoded"
					},
					"response": [
						{
							"id": "d8ac7c04-f8de-4c8d-bba1-548cc1b4f826",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{authUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "792"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "7ab5970d-5eea-4a46-a78c-10bbce8d1d55"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "792"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "OY38lEFWDoEEYBA="
								},
								{
									"key": "x-amzn-Remapped-Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY2NjEzRENFNkVCQzBFNkNEODBCMzc1ODM5NjRDQjZBIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2OTk5NjYyMzcsImV4cCI6MTY5OTk2OTgzNywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTNENUM0OTRFQjk3RDcwOTlDQzZCNUVDNzRBMTc0NzMiLCJpYXQiOjE2OTk5NjYyMzcsInNjb3BlIjpbImFwaTEiXX0.lfmgkLXkxyx8p96_L_Wbvl_7fS1XaxGSLsXGbILoYShkvUWGvNw37DQ3SjVEWhbzOLKGeaaE0EuJSTnCDTc8IWBpEh7797E7dXoggF5SM-H6zuQs6LJ51z1IqJLcaxzOIoJc6PVY3NlcA2wyIzw7gRlw7tIS0SAe-hacm4PhtTUOf4R3ag1100uH60NPaM7UrezXRxGiXNO6lY30gMchrM0i8NW41j-Zzrr_Tb_PwPT9qlZBZWCK99PGCZnLhCgKNq5TbMXtDGJYYhzT7KmmNoS5rE4JjKHhfypcXBeJidOD7kca_irWhOd2UPExgygh4C_H6SsGugAY_vLXAiJGrw\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"api1\"\n}"
						}
					]
				},
				{
					"name": "Authorization - no client id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cebe1a17-77c9-4221-a285-ea460e7f2324",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2233a967-98ba-4cb4-9fde-ee313aca7522",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status('Bad Request');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Error in the response\", function () {\r",
									"    pm.expect(jsonData.error).to.exist;\r",
									"    pm.expect(jsonData.error).to.be.a('string');\r",
									"    pm.expect(jsonData.error).to.eq('invalid_client');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2b49cd77-4248-4fb7-993b-ca6583ee3e00",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{clientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/connect/token",
						"description": "Content-type: application/x-www-form-urlencoded"
					},
					"response": [
						{
							"id": "ec4ab4f0-5696-4c72-a818-6252d71db5eb",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{authUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "792"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "7ab5970d-5eea-4a46-a78c-10bbce8d1d55"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "792"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "OY38lEFWDoEEYBA="
								},
								{
									"key": "x-amzn-Remapped-Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY2NjEzRENFNkVCQzBFNkNEODBCMzc1ODM5NjRDQjZBIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2OTk5NjYyMzcsImV4cCI6MTY5OTk2OTgzNywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTNENUM0OTRFQjk3RDcwOTlDQzZCNUVDNzRBMTc0NzMiLCJpYXQiOjE2OTk5NjYyMzcsInNjb3BlIjpbImFwaTEiXX0.lfmgkLXkxyx8p96_L_Wbvl_7fS1XaxGSLsXGbILoYShkvUWGvNw37DQ3SjVEWhbzOLKGeaaE0EuJSTnCDTc8IWBpEh7797E7dXoggF5SM-H6zuQs6LJ51z1IqJLcaxzOIoJc6PVY3NlcA2wyIzw7gRlw7tIS0SAe-hacm4PhtTUOf4R3ag1100uH60NPaM7UrezXRxGiXNO6lY30gMchrM0i8NW41j-Zzrr_Tb_PwPT9qlZBZWCK99PGCZnLhCgKNq5TbMXtDGJYYhzT7KmmNoS5rE4JjKHhfypcXBeJidOD7kca_irWhOd2UPExgygh4C_H6SsGugAY_vLXAiJGrw\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"api1\"\n}"
						}
					]
				},
				{
					"name": "Authorization - no client secret",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cebe1a17-77c9-4221-a285-ea460e7f2324",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2233a967-98ba-4cb4-9fde-ee313aca7522",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status('Bad Request');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Error in the response\", function () {\r",
									"    pm.expect(jsonData.error).to.exist;\r",
									"    pm.expect(jsonData.error).to.be.a('string');\r",
									"    pm.expect(jsonData.error).to.eq('invalid_client');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b329c233-19fc-4665-a1a3-fb648c100397",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{clientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/connect/token",
						"description": "Content-type: application/x-www-form-urlencoded"
					},
					"response": [
						{
							"id": "17c5ca91-e5f5-4281-87d6-184d617d80b5",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{authUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "792"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "7ab5970d-5eea-4a46-a78c-10bbce8d1d55"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "792"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "OY38lEFWDoEEYBA="
								},
								{
									"key": "x-amzn-Remapped-Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY2NjEzRENFNkVCQzBFNkNEODBCMzc1ODM5NjRDQjZBIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2OTk5NjYyMzcsImV4cCI6MTY5OTk2OTgzNywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTNENUM0OTRFQjk3RDcwOTlDQzZCNUVDNzRBMTc0NzMiLCJpYXQiOjE2OTk5NjYyMzcsInNjb3BlIjpbImFwaTEiXX0.lfmgkLXkxyx8p96_L_Wbvl_7fS1XaxGSLsXGbILoYShkvUWGvNw37DQ3SjVEWhbzOLKGeaaE0EuJSTnCDTc8IWBpEh7797E7dXoggF5SM-H6zuQs6LJ51z1IqJLcaxzOIoJc6PVY3NlcA2wyIzw7gRlw7tIS0SAe-hacm4PhtTUOf4R3ag1100uH60NPaM7UrezXRxGiXNO6lY30gMchrM0i8NW41j-Zzrr_Tb_PwPT9qlZBZWCK99PGCZnLhCgKNq5TbMXtDGJYYhzT7KmmNoS5rE4JjKHhfypcXBeJidOD7kca_irWhOd2UPExgygh4C_H6SsGugAY_vLXAiJGrw\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"api1\"\n}"
						}
					]
				},
				{
					"name": "Authorization - invalid client secret",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cebe1a17-77c9-4221-a285-ea460e7f2324",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2233a967-98ba-4cb4-9fde-ee313aca7522",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status('Bad Request');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Error in the response\", function () {\r",
									"    pm.expect(jsonData.error).to.exist;\r",
									"    pm.expect(jsonData.error).to.be.a('string');\r",
									"    pm.expect(jsonData.error).to.eq('invalid_client');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "16e4e289-a31a-4cdc-9290-2c8c09de9f63",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{clientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "2B23E6C0ABA240ACA572C59CEDAAA089",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/connect/token",
						"description": "Content-type: application/x-www-form-urlencoded"
					},
					"response": [
						{
							"id": "eea6c3d6-0430-4080-b039-ed7c6667a4e6",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{authUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "792"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "7ab5970d-5eea-4a46-a78c-10bbce8d1d55"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "792"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "OY38lEFWDoEEYBA="
								},
								{
									"key": "x-amzn-Remapped-Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY2NjEzRENFNkVCQzBFNkNEODBCMzc1ODM5NjRDQjZBIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2OTk5NjYyMzcsImV4cCI6MTY5OTk2OTgzNywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTNENUM0OTRFQjk3RDcwOTlDQzZCNUVDNzRBMTc0NzMiLCJpYXQiOjE2OTk5NjYyMzcsInNjb3BlIjpbImFwaTEiXX0.lfmgkLXkxyx8p96_L_Wbvl_7fS1XaxGSLsXGbILoYShkvUWGvNw37DQ3SjVEWhbzOLKGeaaE0EuJSTnCDTc8IWBpEh7797E7dXoggF5SM-H6zuQs6LJ51z1IqJLcaxzOIoJc6PVY3NlcA2wyIzw7gRlw7tIS0SAe-hacm4PhtTUOf4R3ag1100uH60NPaM7UrezXRxGiXNO6lY30gMchrM0i8NW41j-Zzrr_Tb_PwPT9qlZBZWCK99PGCZnLhCgKNq5TbMXtDGJYYhzT7KmmNoS5rE4JjKHhfypcXBeJidOD7kca_irWhOd2UPExgygh4C_H6SsGugAY_vLXAiJGrw\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"api1\"\n}"
						}
					]
				},
				{
					"name": "Authorization - invalid grant type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cebe1a17-77c9-4221-a285-ea460e7f2324",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2233a967-98ba-4cb4-9fde-ee313aca7522",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status('Bad Request');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Error in the response\", function () {\r",
									"    pm.expect(jsonData.error).to.exist;\r",
									"    pm.expect(jsonData.error).to.be.a('string');\r",
									"    pm.expect(jsonData.error).to.eq('unsupported_grant_type');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8d4384b4-1a38-47fa-8674-9be7260ce55e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{clientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{clientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentia",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/connect/token",
						"description": "Content-type: application/x-www-form-urlencoded"
					},
					"response": [
						{
							"id": "93905a30-9f7d-4759-98f2-07dd5bfb67d8",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{authUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "792"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "7ab5970d-5eea-4a46-a78c-10bbce8d1d55"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "792"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "OY38lEFWDoEEYBA="
								},
								{
									"key": "x-amzn-Remapped-Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY2NjEzRENFNkVCQzBFNkNEODBCMzc1ODM5NjRDQjZBIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2OTk5NjYyMzcsImV4cCI6MTY5OTk2OTgzNywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTNENUM0OTRFQjk3RDcwOTlDQzZCNUVDNzRBMTc0NzMiLCJpYXQiOjE2OTk5NjYyMzcsInNjb3BlIjpbImFwaTEiXX0.lfmgkLXkxyx8p96_L_Wbvl_7fS1XaxGSLsXGbILoYShkvUWGvNw37DQ3SjVEWhbzOLKGeaaE0EuJSTnCDTc8IWBpEh7797E7dXoggF5SM-H6zuQs6LJ51z1IqJLcaxzOIoJc6PVY3NlcA2wyIzw7gRlw7tIS0SAe-hacm4PhtTUOf4R3ag1100uH60NPaM7UrezXRxGiXNO6lY30gMchrM0i8NW41j-Zzrr_Tb_PwPT9qlZBZWCK99PGCZnLhCgKNq5TbMXtDGJYYhzT7KmmNoS5rE4JjKHhfypcXBeJidOD7kca_irWhOd2UPExgygh4C_H6SsGugAY_vLXAiJGrw\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"api1\"\n}"
						}
					]
				},
				{
					"name": "Authorization - no grant type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cebe1a17-77c9-4221-a285-ea460e7f2324",
								"exec": [
									"postman.setNextRequest(\"Authorization - invalid client id\")"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2233a967-98ba-4cb4-9fde-ee313aca7522",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status('Bad Request');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Error in the response\", function () {\r",
									"    pm.expect(jsonData.error).to.exist;\r",
									"    pm.expect(jsonData.error).to.be.a('string');\r",
									"    pm.expect(jsonData.error).to.eq('unsupported_grant_type');\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "059ae614-7995-4f26-a550-cd2d74834290",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{clientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{clientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/connect/token",
						"description": "Content-type: application/x-www-form-urlencoded"
					},
					"response": [
						{
							"id": "7fa8c6cd-1808-4cec-b284-277c0c120dc6",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{authUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "792"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "7ab5970d-5eea-4a46-a78c-10bbce8d1d55"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "792"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "OY38lEFWDoEEYBA="
								},
								{
									"key": "x-amzn-Remapped-Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY2NjEzRENFNkVCQzBFNkNEODBCMzc1ODM5NjRDQjZBIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2OTk5NjYyMzcsImV4cCI6MTY5OTk2OTgzNywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTNENUM0OTRFQjk3RDcwOTlDQzZCNUVDNzRBMTc0NzMiLCJpYXQiOjE2OTk5NjYyMzcsInNjb3BlIjpbImFwaTEiXX0.lfmgkLXkxyx8p96_L_Wbvl_7fS1XaxGSLsXGbILoYShkvUWGvNw37DQ3SjVEWhbzOLKGeaaE0EuJSTnCDTc8IWBpEh7797E7dXoggF5SM-H6zuQs6LJ51z1IqJLcaxzOIoJc6PVY3NlcA2wyIzw7gRlw7tIS0SAe-hacm4PhtTUOf4R3ag1100uH60NPaM7UrezXRxGiXNO6lY30gMchrM0i8NW41j-Zzrr_Tb_PwPT9qlZBZWCK99PGCZnLhCgKNq5TbMXtDGJYYhzT7KmmNoS5rE4JjKHhfypcXBeJidOD7kca_irWhOd2UPExgygh4C_H6SsGugAY_vLXAiJGrw\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"api1\"\n}"
						}
					]
				}
			],
			"id": "f8eb1a43-1b8d-41fa-84ba-df2cd125d43f"
		},
		{
			"name": "Authorization - Bunch(QA)",
			"item": [
				{
					"name": "Authorization - QA",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cebe1a17-77c9-4221-a285-ea460e7f2324",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2233a967-98ba-4cb4-9fde-ee313aca7522",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"token\", jsonData.access_token); \r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Access token is present in the response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token).to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Access token is a non-empty string\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token).to.be.a('string').and.to.not.be.empty;\r",
									"});\r",
									"pm.test(\"token type  equals 'Bearer'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token_type).to.be.a('string').and.to.eql(\"Bearer\");\r",
									"});\r",
									"pm.test(\"Scope equals 'api1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.scope).to.be.a('string').and.to.eql(\"api1\");\r",
									"});\r",
									"pm.test(\"token expires in 3600\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.expires_in).to.eql(3600);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "fdf14e3b-1664-49b6-a00c-a08faef35cf5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "B347154674E641A8A7FFC95919C024E0",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "C035BDA6414844008CF568AF19C5DFDB",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/connect/token",
						"description": "Content-type: application/x-www-form-urlencoded"
					},
					"response": [
						{
							"id": "a6da10ef-9496-43d3-9851-b0a7990ad026",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{authUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "792"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "7ab5970d-5eea-4a46-a78c-10bbce8d1d55"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "792"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "OY38lEFWDoEEYBA="
								},
								{
									"key": "x-amzn-Remapped-Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY2NjEzRENFNkVCQzBFNkNEODBCMzc1ODM5NjRDQjZBIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2OTk5NjYyMzcsImV4cCI6MTY5OTk2OTgzNywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTNENUM0OTRFQjk3RDcwOTlDQzZCNUVDNzRBMTc0NzMiLCJpYXQiOjE2OTk5NjYyMzcsInNjb3BlIjpbImFwaTEiXX0.lfmgkLXkxyx8p96_L_Wbvl_7fS1XaxGSLsXGbILoYShkvUWGvNw37DQ3SjVEWhbzOLKGeaaE0EuJSTnCDTc8IWBpEh7797E7dXoggF5SM-H6zuQs6LJ51z1IqJLcaxzOIoJc6PVY3NlcA2wyIzw7gRlw7tIS0SAe-hacm4PhtTUOf4R3ag1100uH60NPaM7UrezXRxGiXNO6lY30gMchrM0i8NW41j-Zzrr_Tb_PwPT9qlZBZWCK99PGCZnLhCgKNq5TbMXtDGJYYhzT7KmmNoS5rE4JjKHhfypcXBeJidOD7kca_irWhOd2UPExgygh4C_H6SsGugAY_vLXAiJGrw\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"api1\"\n}"
						}
					]
				},
				{
					"name": "Authorization - invalid client id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cebe1a17-77c9-4221-a285-ea460e7f2324",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2233a967-98ba-4cb4-9fde-ee313aca7522",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status('Bad Request');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Error in the response\", function () {\r",
									"    pm.expect(jsonData.error).to.exist;\r",
									"    pm.expect(jsonData.error).to.be.a('string');\r",
									"    pm.expect(jsonData.error).to.eq('invalid_client');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e341291b-4498-45e9-961b-ab1da618c8f6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "2E9FDC132C2344148BEF79851B481590",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{clientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/connect/token",
						"description": "Content-type: application/x-www-form-urlencoded"
					},
					"response": [
						{
							"id": "5c48cc05-dd75-406e-b818-e5288eafb524",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{authUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "792"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "7ab5970d-5eea-4a46-a78c-10bbce8d1d55"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "792"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "OY38lEFWDoEEYBA="
								},
								{
									"key": "x-amzn-Remapped-Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY2NjEzRENFNkVCQzBFNkNEODBCMzc1ODM5NjRDQjZBIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2OTk5NjYyMzcsImV4cCI6MTY5OTk2OTgzNywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTNENUM0OTRFQjk3RDcwOTlDQzZCNUVDNzRBMTc0NzMiLCJpYXQiOjE2OTk5NjYyMzcsInNjb3BlIjpbImFwaTEiXX0.lfmgkLXkxyx8p96_L_Wbvl_7fS1XaxGSLsXGbILoYShkvUWGvNw37DQ3SjVEWhbzOLKGeaaE0EuJSTnCDTc8IWBpEh7797E7dXoggF5SM-H6zuQs6LJ51z1IqJLcaxzOIoJc6PVY3NlcA2wyIzw7gRlw7tIS0SAe-hacm4PhtTUOf4R3ag1100uH60NPaM7UrezXRxGiXNO6lY30gMchrM0i8NW41j-Zzrr_Tb_PwPT9qlZBZWCK99PGCZnLhCgKNq5TbMXtDGJYYhzT7KmmNoS5rE4JjKHhfypcXBeJidOD7kca_irWhOd2UPExgygh4C_H6SsGugAY_vLXAiJGrw\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"api1\"\n}"
						}
					]
				},
				{
					"name": "Authorization - no client id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cebe1a17-77c9-4221-a285-ea460e7f2324",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2233a967-98ba-4cb4-9fde-ee313aca7522",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status('Bad Request');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Error in the response\", function () {\r",
									"    pm.expect(jsonData.error).to.exist;\r",
									"    pm.expect(jsonData.error).to.be.a('string');\r",
									"    pm.expect(jsonData.error).to.eq('invalid_client');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "5639af38-3584-410a-82de-4edb92279f9b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{clientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/connect/token",
						"description": "Content-type: application/x-www-form-urlencoded"
					},
					"response": [
						{
							"id": "ba171da5-bd6a-4130-9a7e-6671b583f0b2",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{authUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "792"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "7ab5970d-5eea-4a46-a78c-10bbce8d1d55"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "792"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "OY38lEFWDoEEYBA="
								},
								{
									"key": "x-amzn-Remapped-Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY2NjEzRENFNkVCQzBFNkNEODBCMzc1ODM5NjRDQjZBIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2OTk5NjYyMzcsImV4cCI6MTY5OTk2OTgzNywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTNENUM0OTRFQjk3RDcwOTlDQzZCNUVDNzRBMTc0NzMiLCJpYXQiOjE2OTk5NjYyMzcsInNjb3BlIjpbImFwaTEiXX0.lfmgkLXkxyx8p96_L_Wbvl_7fS1XaxGSLsXGbILoYShkvUWGvNw37DQ3SjVEWhbzOLKGeaaE0EuJSTnCDTc8IWBpEh7797E7dXoggF5SM-H6zuQs6LJ51z1IqJLcaxzOIoJc6PVY3NlcA2wyIzw7gRlw7tIS0SAe-hacm4PhtTUOf4R3ag1100uH60NPaM7UrezXRxGiXNO6lY30gMchrM0i8NW41j-Zzrr_Tb_PwPT9qlZBZWCK99PGCZnLhCgKNq5TbMXtDGJYYhzT7KmmNoS5rE4JjKHhfypcXBeJidOD7kca_irWhOd2UPExgygh4C_H6SsGugAY_vLXAiJGrw\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"api1\"\n}"
						}
					]
				},
				{
					"name": "Authorization - no client secret",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cebe1a17-77c9-4221-a285-ea460e7f2324",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2233a967-98ba-4cb4-9fde-ee313aca7522",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status('Bad Request');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Error in the response\", function () {\r",
									"    pm.expect(jsonData.error).to.exist;\r",
									"    pm.expect(jsonData.error).to.be.a('string');\r",
									"    pm.expect(jsonData.error).to.eq('invalid_client');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f9bd3325-49f9-4f81-ae35-9de929787d36",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{clientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/connect/token",
						"description": "Content-type: application/x-www-form-urlencoded"
					},
					"response": [
						{
							"id": "1033c412-432f-4a00-8ad2-0503262eaf18",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{authUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "792"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "7ab5970d-5eea-4a46-a78c-10bbce8d1d55"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "792"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "OY38lEFWDoEEYBA="
								},
								{
									"key": "x-amzn-Remapped-Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY2NjEzRENFNkVCQzBFNkNEODBCMzc1ODM5NjRDQjZBIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2OTk5NjYyMzcsImV4cCI6MTY5OTk2OTgzNywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTNENUM0OTRFQjk3RDcwOTlDQzZCNUVDNzRBMTc0NzMiLCJpYXQiOjE2OTk5NjYyMzcsInNjb3BlIjpbImFwaTEiXX0.lfmgkLXkxyx8p96_L_Wbvl_7fS1XaxGSLsXGbILoYShkvUWGvNw37DQ3SjVEWhbzOLKGeaaE0EuJSTnCDTc8IWBpEh7797E7dXoggF5SM-H6zuQs6LJ51z1IqJLcaxzOIoJc6PVY3NlcA2wyIzw7gRlw7tIS0SAe-hacm4PhtTUOf4R3ag1100uH60NPaM7UrezXRxGiXNO6lY30gMchrM0i8NW41j-Zzrr_Tb_PwPT9qlZBZWCK99PGCZnLhCgKNq5TbMXtDGJYYhzT7KmmNoS5rE4JjKHhfypcXBeJidOD7kca_irWhOd2UPExgygh4C_H6SsGugAY_vLXAiJGrw\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"api1\"\n}"
						}
					]
				},
				{
					"name": "Authorization - invalid client secret",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cebe1a17-77c9-4221-a285-ea460e7f2324",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2233a967-98ba-4cb4-9fde-ee313aca7522",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status('Bad Request');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Error in the response\", function () {\r",
									"    pm.expect(jsonData.error).to.exist;\r",
									"    pm.expect(jsonData.error).to.be.a('string');\r",
									"    pm.expect(jsonData.error).to.eq('invalid_client');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "cc068d23-1cfe-4b8f-8e1f-21947420897e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{clientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "2B23E6C0ABA240ACA572C59CEDAAA089",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/connect/token",
						"description": "Content-type: application/x-www-form-urlencoded"
					},
					"response": [
						{
							"id": "3973d2f2-045c-438b-be14-10d947afdc6d",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{authUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "792"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "7ab5970d-5eea-4a46-a78c-10bbce8d1d55"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "792"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "OY38lEFWDoEEYBA="
								},
								{
									"key": "x-amzn-Remapped-Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY2NjEzRENFNkVCQzBFNkNEODBCMzc1ODM5NjRDQjZBIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2OTk5NjYyMzcsImV4cCI6MTY5OTk2OTgzNywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTNENUM0OTRFQjk3RDcwOTlDQzZCNUVDNzRBMTc0NzMiLCJpYXQiOjE2OTk5NjYyMzcsInNjb3BlIjpbImFwaTEiXX0.lfmgkLXkxyx8p96_L_Wbvl_7fS1XaxGSLsXGbILoYShkvUWGvNw37DQ3SjVEWhbzOLKGeaaE0EuJSTnCDTc8IWBpEh7797E7dXoggF5SM-H6zuQs6LJ51z1IqJLcaxzOIoJc6PVY3NlcA2wyIzw7gRlw7tIS0SAe-hacm4PhtTUOf4R3ag1100uH60NPaM7UrezXRxGiXNO6lY30gMchrM0i8NW41j-Zzrr_Tb_PwPT9qlZBZWCK99PGCZnLhCgKNq5TbMXtDGJYYhzT7KmmNoS5rE4JjKHhfypcXBeJidOD7kca_irWhOd2UPExgygh4C_H6SsGugAY_vLXAiJGrw\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"api1\"\n}"
						}
					]
				},
				{
					"name": "Authorization - invalid grant type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cebe1a17-77c9-4221-a285-ea460e7f2324",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2233a967-98ba-4cb4-9fde-ee313aca7522",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status('Bad Request');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Error in the response\", function () {\r",
									"    pm.expect(jsonData.error).to.exist;\r",
									"    pm.expect(jsonData.error).to.be.a('string');\r",
									"    pm.expect(jsonData.error).to.eq('unsupported_grant_type');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "79ac0148-d799-4f87-aadc-6171927c79a6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{clientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{clientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentia",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/connect/token",
						"description": "Content-type: application/x-www-form-urlencoded"
					},
					"response": [
						{
							"id": "1780629d-07b6-49aa-b257-2cd2123c9313",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{authUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "792"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "7ab5970d-5eea-4a46-a78c-10bbce8d1d55"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "792"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "OY38lEFWDoEEYBA="
								},
								{
									"key": "x-amzn-Remapped-Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY2NjEzRENFNkVCQzBFNkNEODBCMzc1ODM5NjRDQjZBIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2OTk5NjYyMzcsImV4cCI6MTY5OTk2OTgzNywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTNENUM0OTRFQjk3RDcwOTlDQzZCNUVDNzRBMTc0NzMiLCJpYXQiOjE2OTk5NjYyMzcsInNjb3BlIjpbImFwaTEiXX0.lfmgkLXkxyx8p96_L_Wbvl_7fS1XaxGSLsXGbILoYShkvUWGvNw37DQ3SjVEWhbzOLKGeaaE0EuJSTnCDTc8IWBpEh7797E7dXoggF5SM-H6zuQs6LJ51z1IqJLcaxzOIoJc6PVY3NlcA2wyIzw7gRlw7tIS0SAe-hacm4PhtTUOf4R3ag1100uH60NPaM7UrezXRxGiXNO6lY30gMchrM0i8NW41j-Zzrr_Tb_PwPT9qlZBZWCK99PGCZnLhCgKNq5TbMXtDGJYYhzT7KmmNoS5rE4JjKHhfypcXBeJidOD7kca_irWhOd2UPExgygh4C_H6SsGugAY_vLXAiJGrw\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"api1\"\n}"
						}
					]
				},
				{
					"name": "Authorization - no grant type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cebe1a17-77c9-4221-a285-ea460e7f2324",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2233a967-98ba-4cb4-9fde-ee313aca7522",
								"exec": [
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is Bad Request\", function () {\r",
									"    pm.response.to.have.status('Bad Request');\r",
									"});\r",
									"\r",
									"var jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Error in the response\", function () {\r",
									"    pm.expect(jsonData.error).to.exist;\r",
									"    pm.expect(jsonData.error).to.be.a('string');\r",
									"    pm.expect(jsonData.error).to.eq('unsupported_grant_type');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "7d97f91f-eecb-47f8-8aca-75c47ca3464a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{clientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{clientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/connect/token",
						"description": "Content-type: application/x-www-form-urlencoded"
					},
					"response": [
						{
							"id": "42a72ae0-76de-4259-b949-981c4f080176",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{authUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "792"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "7ab5970d-5eea-4a46-a78c-10bbce8d1d55"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "792"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "OY38lEFWDoEEYBA="
								},
								{
									"key": "x-amzn-Remapped-Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY2NjEzRENFNkVCQzBFNkNEODBCMzc1ODM5NjRDQjZBIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2OTk5NjYyMzcsImV4cCI6MTY5OTk2OTgzNywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTNENUM0OTRFQjk3RDcwOTlDQzZCNUVDNzRBMTc0NzMiLCJpYXQiOjE2OTk5NjYyMzcsInNjb3BlIjpbImFwaTEiXX0.lfmgkLXkxyx8p96_L_Wbvl_7fS1XaxGSLsXGbILoYShkvUWGvNw37DQ3SjVEWhbzOLKGeaaE0EuJSTnCDTc8IWBpEh7797E7dXoggF5SM-H6zuQs6LJ51z1IqJLcaxzOIoJc6PVY3NlcA2wyIzw7gRlw7tIS0SAe-hacm4PhtTUOf4R3ag1100uH60NPaM7UrezXRxGiXNO6lY30gMchrM0i8NW41j-Zzrr_Tb_PwPT9qlZBZWCK99PGCZnLhCgKNq5TbMXtDGJYYhzT7KmmNoS5rE4JjKHhfypcXBeJidOD7kca_irWhOd2UPExgygh4C_H6SsGugAY_vLXAiJGrw\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"api1\"\n}"
						}
					]
				}
			],
			"id": "f25cad0e-68d6-4d85-8bc0-0054ab87ed4a"
		},
		{
			"name": "Reserve an account",
			"item": [
				{
					"name": "Reserve an account",
					"id": "6b0a6a0d-85d2-424f-8f2a-37abb2ec0bcf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"{{$randomFirstName}} {{$randomLastName}}\",//required\r\n  \"emailAddress\": \"{{$randomFirstName}}@mailinator.com\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans"
					},
					"response": [
						{
							"id": "768d33e3-6bb3-41d3-8764-788b7018b64e",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/virtual-nubans"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "323"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:23:23 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"merchantId\": 1,\n        \"accountNumber\": \"7880000024\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"accountReference\": \"2327323232\",\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountName\": \"Adolf Hitler\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Reserve an account - Invalid account reference",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "deaf4186-33ff-41e8-a8d6-46f6379b8ce8",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(2);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Duplicate Transaction');",
									"});",
									"",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(1027);",
									"});",
									"",
									"// pm.test(\"response code should be null\", function () {",
									"//     pm.expect(jsonData.responseCode).to.eql(null);",
									"// });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "8d7bbf64-823c-41df-9590-ad677dcf718e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"232732323b\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans"
					},
					"response": [
						{
							"id": "d28b0512-84cd-4d6c-9b0c-7611eb236ddd",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/virtual-nubans"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "323"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:23:23 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"merchantId\": 1,\n        \"accountNumber\": \"7880000024\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"accountReference\": \"2327323232\",\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountName\": \"Adolf Hitler\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Reserve an account - No account reference",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3fe6f38-6a0e-4fd0-bcf2-c900f048aa96",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.eql(\"The AccountReference field is required.\");",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "34d89f6a-da68-4593-a24b-1e4227b8726c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans"
					},
					"response": [
						{
							"id": "63c3495b-65ba-4ba4-ac01-e908c7434cef",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/virtual-nubans"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "323"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:23:23 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"merchantId\": 1,\n        \"accountNumber\": \"7880000024\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"accountReference\": \"2327323232\",\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountName\": \"Adolf Hitler\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Reserve an account - No account name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee0adf2a-a447-4367-acc7-39965db76b48",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.contain(\"The AccountName field is required.\");",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e17dccd2-349a-48eb-9ab4-2e9b5d13cbf2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans"
					},
					"response": [
						{
							"id": "faca30dd-6bf7-4503-b19d-d5309ca362a9",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/virtual-nubans"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "323"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:23:23 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"merchantId\": 1,\n        \"accountNumber\": \"7880000024\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"accountReference\": \"2327323232\",\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountName\": \"Adolf Hitler\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Reserve an account -  invalid email add",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c0ca9061-c716-467c-8b8f-bf124aace8a7",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(2);",
									"});",
									"",
									"// pm.test(\"error message should be correct\", function () {",
									"//     pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"// });",
									"",
									"// pm.test(\"validation message should be correct\", function () {",
									"//     pm.expect(jsonData.validationMessages[0]).to.be.eql(\"The email address is invalid\");",
									"// });",
									"",
									"//The above are commented out because we are currently not validating emails",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(1027);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "87024aa6-a288-4cbe-a0e5-a1afb62e8d69",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans"
					},
					"response": [
						{
							"id": "c3fffbf9-b456-4941-9ce9-a78982e3e3b7",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/virtual-nubans"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "323"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:23:23 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"merchantId\": 1,\n        \"accountNumber\": \"7880000024\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"accountReference\": \"2327323232\",\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountName\": \"Adolf Hitler\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Reserve an account -  invalid phone number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "58bd1205-0a52-4c04-8e1c-835fdeab7914",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(2);",
									"});",
									"",
									"",
									"// pm.test(\"validation message should be correct\", function () {",
									"//     pm.expect(jsonData.validationMessages[0]).to.be.eql(\"The phone number is invalid\");",
									"// });",
									"",
									"// this is commented out  because we aren't validating phone number for now",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(1027);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "10ec47bf-2a97-4f46-98f6-5e1163c64640",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"0#01234567b\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans"
					},
					"response": [
						{
							"id": "01c722ed-adc5-4da9-aac0-17c4fe9f9bca",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/virtual-nubans"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "323"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:23:23 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"merchantId\": 1,\n        \"accountNumber\": \"7880000024\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"accountReference\": \"2327323232\",\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountName\": \"Adolf Hitler\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Reserve an account -  invalid bvn",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aadfecf0-f4ab-4b89-9a21-5dcc289f8999",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(2);",
									"});",
									"",
									"// pm.test(\"error message should be correct\", function () {",
									"//     pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"// });",
									"",
									"// pm.test(\"validation message should be correct\", function () {",
									"//     pm.expect(jsonData.validationMessages[0]).to.be.eql(\"The bvn is invalid\");",
									"// });",
									"",
									"//The above is commented out because we are not validating bvn for now",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(1027);",
									"});",
									"",
									"// pm.test(\"response code should be null\", function () {",
									"//     pm.expect(jsonData.responseCode).to.eql(null);",
									"// });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "178ab511-9975-4de6-845d-846b6e83e104",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"0000345ttyy\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans"
					},
					"response": [
						{
							"id": "917f0de7-ed0a-429d-9514-f4151fb504bc",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/virtual-nubans"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "323"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:23:23 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"merchantId\": 1,\n        \"accountNumber\": \"7880000024\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"accountReference\": \"2327323232\",\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountName\": \"Adolf Hitler\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Reserve an account -  incorrect bvn",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a3460576-f0a9-44f1-bd8b-7a72601933e4",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(2);",
									"});",
									"",
									"// pm.test(\"error message should be correct\", function () {",
									"//     pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"// });",
									"",
									"// pm.test(\"validation message should be correct\", function () {",
									"//     pm.expect(jsonData.validationMessages[0]).to.be.eql(\"The bvn is incomplete\");",
									"// });",
									"",
									"//The above is commented out because we aren't validating bvn",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(1027);",
									"});",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "e4fb9568-c703-4bc0-8754-376b7558ce8d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"00000\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans"
					},
					"response": [
						{
							"id": "19d05f40-0511-426c-88ea-646a0ec9e6a8",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/virtual-nubans"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "323"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:23:23 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"merchantId\": 1,\n        \"accountNumber\": \"7880000024\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"accountReference\": \"2327323232\",\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountName\": \"Adolf Hitler\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Reserve an account -  expiry date in the past",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5db4f2ac-92ca-4683-a654-2e1bfe8adba1",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(2);",
									"});",
									"",
									"// pm.test(\"error message should be correct\", function () {",
									"//     pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"// });",
									"",
									"// pm.test(\"validation message should be correct\", function () {",
									"//     pm.expect(jsonData.validationMessages[0]).to.be.eql(\"Expires On' must not be in the past\");",
									"// });",
									"",
									"",
									"//The above is commented out because we aren't validating date for now",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(1027);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "fafea2fb-6925-4e4e-a5c6-f680694969a1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2022-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans"
					},
					"response": [
						{
							"id": "71cc8381-40f4-4b28-b012-8d193bdf9a96",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/virtual-nubans"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "323"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:23:23 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"merchantId\": 1,\n        \"accountNumber\": \"7880000024\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"accountReference\": \"2327323232\",\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountName\": \"Adolf Hitler\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Reserve an account -  dynamic acct & no expiry date",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5db4f2ac-92ca-4683-a654-2e1bfe8adba1",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.eql(\"'Expires On' must not be empty.\");",
									"});",
									"",
									"",
									"//The above is commented out because we aren't validating date for now",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "780fe744-8770-4616-a7b3-a97d258499e5",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "00e7225c-fe70-45dc-8f88-380c055fb0c1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 2,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans"
					},
					"response": [
						{
							"id": "9189b6b1-f935-49a9-a185-f584b113a4cf",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/virtual-nubans"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "323"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:23:23 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"merchantId\": 1,\n        \"accountNumber\": \"7880000024\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"accountReference\": \"2327323232\",\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountName\": \"Adolf Hitler\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Reserve an account -  invalid account type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac3fd6e0-31e3-4e71-a3c1-4365d86995a4",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.eql(\"Please specify account type as either 1(static) or 2(dynamic)\");",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "72d4c0f7-2af3-467a-9dc1-a23738abf362",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 0,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans"
					},
					"response": [
						{
							"id": "eb6ca6c8-4090-485b-8e6d-f4a6dc07f6fa",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/virtual-nubans"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "323"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:23:23 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"merchantId\": 1,\n        \"accountNumber\": \"7880000024\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"accountReference\": \"2327323232\",\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountName\": \"Adolf Hitler\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				}
			],
			"id": "99456f24-39e3-4c88-a4ed-e392ba753787"
		},
		{
			"name": "Retrieve a reserved account",
			"item": [
				{
					"name": "Retrieve a reserved account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5da11bee-061c-439b-88b8-c48ba8529f23",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is OK\", function () {",
									"    pm.response.to.have.status('OK');",
									"});",
									"",
									"pm.test(\"hasResult should be equal to true\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.hasResult).to.eql(true);",
									"});",
									"",
									"pm.test(\"id should be a string and exist\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.id).to.be.a('string').and.to.not.be.empty;",
									"});",
									"pm.test(\"Account should be active\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.isActive).to.be.a('boolean').and.to.eql(true);",
									"});",
									"pm.test(\"MerChant ID should be correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.merchantId).to.be.an('number').and.to.eql(1);",
									"});",
									"pm.test(\"Account reference should be correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.accountReference).to.be.a('string').and.to.eql('2327323232');",
									"});",
									"pm.test(\"Account name should be correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.accountName).to.eql(\"Adolf Hitler\");",
									"});",
									"pm.test(\"customer Email should be correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.customerEmail).to.be.a('string').and.to.eql(\"leavemebe@gi.\");",
									"});",
									"pm.test(\"customer Name should be correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.customerName).to.be.a('string').and.to.eql(\"Adolf Hitler\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "2e47d143-079b-49da-817d-7b622b3dc7e9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans/accountRef/{{accountRef}}"
					},
					"response": [
						{
							"id": "be747d17-4a04-4634-948c-3a34136d8c5a",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/virtual-nubans/accountRef/{{accountRef}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "480"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:26:46 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"id\": \"d7801515-e0e8-4451-b467-8198941f5fee\",\n        \"isActive\": true,\n        \"merchantId\": 1,\n        \"accountReference\": \"2327323232\",\n        \"bvn\": \"\",\n        \"accountName\": \"Adolf Hitler\",\n        \"customerEmail\": \"leavemebe@gi.go\",\n        \"customerName\": \"Adolf Hitler\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"reservedAccountType\": 1,\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountNumber\": \"7880000024\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Retrieve a reserved account- invalid account ref",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0428da7-9c99-43a0-91dc-e89e37e1f50f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(2);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Reserved Account Not Found');",
									"});",
									"",
									"pm.test(\"validation message should be null\", function () {",
									"    pm.expect(jsonData.validationMessages).to.be.null;",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "3b77421d-72f5-46bd-957e-2b6ad0d899cc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans/accountRef/2327-32323b"
					},
					"response": [
						{
							"id": "89e531dd-5f16-4c78-a9fb-7d3c51d9a031",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/virtual-nubans/accountRef/{{accountRef}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "480"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:26:46 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"id\": \"d7801515-e0e8-4451-b467-8198941f5fee\",\n        \"isActive\": true,\n        \"merchantId\": 1,\n        \"accountReference\": \"2327323232\",\n        \"bvn\": \"\",\n        \"accountName\": \"Adolf Hitler\",\n        \"customerEmail\": \"leavemebe@gi.go\",\n        \"customerName\": \"Adolf Hitler\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"reservedAccountType\": 1,\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountNumber\": \"7880000024\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Retrieve a reserved account- no account ref",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0571c09c-3648-4056-904a-f1a74f049df9",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.eql(\"The value 'accountRef' is not valid.\");",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2822e0cd-94d1-4395-a19f-76a60fed5fce",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans/accountRef/"
					},
					"response": [
						{
							"id": "79535c9d-4d50-43fa-a164-d820b7ea7f8c",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/virtual-nubans/accountRef/{{accountRef}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "480"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:26:46 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"id\": \"d7801515-e0e8-4451-b467-8198941f5fee\",\n        \"isActive\": true,\n        \"merchantId\": 1,\n        \"accountReference\": \"2327323232\",\n        \"bvn\": \"\",\n        \"accountName\": \"Adolf Hitler\",\n        \"customerEmail\": \"leavemebe@gi.go\",\n        \"customerName\": \"Adolf Hitler\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"reservedAccountType\": 1,\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountNumber\": \"7880000024\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Retrieve a reserved account- No authorization",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8c3d1e3-c40e-4758-8a5e-e0457f8d1848",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401, \"Unauthorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "fa4b1914-22ea-4276-a352-f96ec025c9d1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans/accountRef/{{accountRef}}"
					},
					"response": [
						{
							"id": "a83a8418-c87e-424c-9b2d-ca9c922daa95",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/virtual-nubans/accountRef/{{accountRef}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "480"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:26:46 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"id\": \"d7801515-e0e8-4451-b467-8198941f5fee\",\n        \"isActive\": true,\n        \"merchantId\": 1,\n        \"accountReference\": \"2327323232\",\n        \"bvn\": \"\",\n        \"accountName\": \"Adolf Hitler\",\n        \"customerEmail\": \"leavemebe@gi.go\",\n        \"customerName\": \"Adolf Hitler\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"reservedAccountType\": 1,\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountNumber\": \"7880000024\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Retrieve a reserved account- invalid authorization",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7841a48a-3a41-4084-bd93-4e904433c721",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401, \"Unauthorized\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "0ce9f657-dab6-40e7-9e09-0bbdb348f0cc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}0"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans/accountRef/{{accountRef}}"
					},
					"response": [
						{
							"id": "0eb10358-22bb-4276-9523-81c918824337",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/virtual-nubans/accountRef/{{accountRef}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "480"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:26:46 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"id\": \"d7801515-e0e8-4451-b467-8198941f5fee\",\n        \"isActive\": true,\n        \"merchantId\": 1,\n        \"accountReference\": \"2327323232\",\n        \"bvn\": \"\",\n        \"accountName\": \"Adolf Hitler\",\n        \"customerEmail\": \"leavemebe@gi.go\",\n        \"customerName\": \"Adolf Hitler\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"reservedAccountType\": 1,\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountNumber\": \"7880000024\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				}
			],
			"id": "de7c9a6e-c7a7-4a9f-9371-60d2566b5bf7"
		},
		{
			"name": "Retrieve a reserved account by account number",
			"item": [
				{
					"name": "Retrieve a reserved account by account number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3ec1c3b-3e88-4166-b3c6-e6edd205f066",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.test(\"Status code is OK\", function () {",
									"    pm.response.to.have.status('OK');",
									"});",
									"",
									"pm.test(\"hasResult should be equal to true\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.hasResult).to.eql(true);",
									"});",
									"",
									"pm.test(\"id should be a string and exist\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.id).to.be.a('string').and.to.not.be.empty;",
									"});",
									"// pm.test(\"Account should be active\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.result.isActive).to.be.a('boolean').and.to.eql(true);",
									"// });",
									"pm.test(\"MerChant ID should be correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.merchantId).to.be.an('number').and.to.eql(1);",
									"});",
									"pm.test(\"Account reference should be correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.accountReference).to.be.a('string').and.to.eql('2327323232_Ud7801515-e0e8-4451-b467-8198941f5fee_108');",
									"});",
									"pm.test(\"Account name should be correct\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.result.accountName).to.eql(\"Adolf Hitler\");",
									"});",
									"// pm.test(\"customer Email should be correct\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.result.customerEmail).to.be.a('string').and.to.eql(\"leavemebe@gi.go\");",
									"// });",
									"// pm.test(\"customer Name should be correct\", function () {",
									"//     var jsonData = pm.response.json();",
									"//     pm.expect(jsonData.result.customerName).to.be.a('string').and.to.eql(\"Adolf Hitler\");",
									"// });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fd857e5d-95d6-44a0-a160-1018398194e8",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "c139fa09-7b31-4184-b5ad-0e5b658b8705",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans/accountNumber/{{accountNumber}}"
					},
					"response": [
						{
							"id": "c2ead810-a2d5-44e0-a573-343af67a3e83",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/virtual-nubans/accountRef/{{accountRef}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "480"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:26:46 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"id\": \"d7801515-e0e8-4451-b467-8198941f5fee\",\n        \"isActive\": true,\n        \"merchantId\": 1,\n        \"accountReference\": \"2327323232\",\n        \"bvn\": \"\",\n        \"accountName\": \"Adolf Hitler\",\n        \"customerEmail\": \"leavemebe@gi.go\",\n        \"customerName\": \"Adolf Hitler\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"reservedAccountType\": 1,\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountNumber\": \"7880000024\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Retrieve a reserved account- invalid account number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0428da7-9c99-43a0-91dc-e89e37e1f50f",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(2);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Reserved Account Not Found');",
									"});",
									"",
									"pm.test(\"validation message should be null\", function () {",
									"    pm.expect(jsonData.validationMessages).to.be.null;",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "ec5b6b57-5b1e-4d23-9dd3-5c528a2dd687",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans/accountRef/788000002o"
					},
					"response": [
						{
							"id": "c92d889c-6970-4021-b1f4-5f805a43989d",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/virtual-nubans/accountRef/{{accountRef}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "480"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:26:46 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"id\": \"d7801515-e0e8-4451-b467-8198941f5fee\",\n        \"isActive\": true,\n        \"merchantId\": 1,\n        \"accountReference\": \"2327323232\",\n        \"bvn\": \"\",\n        \"accountName\": \"Adolf Hitler\",\n        \"customerEmail\": \"leavemebe@gi.go\",\n        \"customerName\": \"Adolf Hitler\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"reservedAccountType\": 1,\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountNumber\": \"7880000024\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Retrieve a reserved account- no account number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0571c09c-3648-4056-904a-f1a74f049df9",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.eql(\"The value 'accountRef' is not valid.\");",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "81af49f5-5425-4756-a98d-18d2efdbe53a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans/accountRef/"
					},
					"response": [
						{
							"id": "c2eeecc2-859b-4d86-9c3f-61b7cf100995",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/virtual-nubans/accountRef/{{accountRef}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "480"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:26:46 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"id\": \"d7801515-e0e8-4451-b467-8198941f5fee\",\n        \"isActive\": true,\n        \"merchantId\": 1,\n        \"accountReference\": \"2327323232\",\n        \"bvn\": \"\",\n        \"accountName\": \"Adolf Hitler\",\n        \"customerEmail\": \"leavemebe@gi.go\",\n        \"customerName\": \"Adolf Hitler\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"reservedAccountType\": 1,\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountNumber\": \"7880000024\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Retrieve a reserved account- No authorization",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c8c3d1e3-c40e-4758-8a5e-e0457f8d1848",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401, \"Unauthorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5db7f1bb-4fae-42f0-9e88-3d1de2eaef68",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "f3bde2d6-95df-4bda-a680-deddfbac6a9e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": ""
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans/accountRef/{{accountNumber}}"
					},
					"response": [
						{
							"id": "97138743-178f-4f2e-97ab-ce2fa2243e3c",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/virtual-nubans/accountRef/{{accountRef}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "480"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:26:46 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"id\": \"d7801515-e0e8-4451-b467-8198941f5fee\",\n        \"isActive\": true,\n        \"merchantId\": 1,\n        \"accountReference\": \"2327323232\",\n        \"bvn\": \"\",\n        \"accountName\": \"Adolf Hitler\",\n        \"customerEmail\": \"leavemebe@gi.go\",\n        \"customerName\": \"Adolf Hitler\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"reservedAccountType\": 1,\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountNumber\": \"7880000024\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Retrieve a reserved account- invalid authorization",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7841a48a-3a41-4084-bd93-4e904433c721",
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401, \"Unauthorized\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "8bd85785-d893-4d50-9cc8-c96d92f36a2f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "eyJhbGciOiJSUzI1NiIsImtpZCI6IjM4NjdEODA1NjAyMkVGRjQxMzVBNTlENjBFNUJFNTJBIiwidHlwIjoXQrand0In0.eyJuYmYiOjE3MDgyOTQzOTMsImV4cCI6MTcwODI5Nzk5MywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTE3MTc2MDlEOUU1Q0E3OTEzQTNBOTdCRkI1NTNDRUYiLCJpYXQiOjE3MDgyOTQzOTMsInNjb3BlIjpbImFwaTEiXX0.HEavwQ_rrdo1Iksvbfi8qLtLsVXN_wJhHhPwVQYBPCwWhszpYFWx0w5Ne4snDA_t3TliLKlCzN39Yi-7vwydDqek2TZ3MUjYGndb6sLgGhRJh03V-3xUE-U50lTHZOklMfwpGQ5EQF_3wnODK3Q74nQIuCWMOHgwyVYh-kLhmqHDFaHfvdRD7UgjwkWnxJUIwfq61j1jxx45xZNOzCBgkg6NuGg66_opndBFrqENveDoFgKYdgLmQlm1QfnbpBc9-VhIQ_qoBhTCTaxLm81ioZCm3W_AMECBf3iPT6X_bncxLej0lfK03HFkPsHUJpyaOFYhUHNVh3RDmQoWSTY7kg"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"2327323232\",//required\r\n  \"accountName\": \"Adolf Hitler\",//required\r\n  \"emailAddress\": \"leavemebe@gi.go\",//optional\r\n  \"phoneNumber\": \"07012345678\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans/accountRef/{{accountNumber}}"
					},
					"response": [
						{
							"id": "b4aaeb78-a3c3-484f-9b28-3994425134c1",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/virtual-nubans/accountRef/{{accountRef}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "480"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:26:46 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"id\": \"d7801515-e0e8-4451-b467-8198941f5fee\",\n        \"isActive\": true,\n        \"merchantId\": 1,\n        \"accountReference\": \"2327323232\",\n        \"bvn\": \"\",\n        \"accountName\": \"Adolf Hitler\",\n        \"customerEmail\": \"leavemebe@gi.go\",\n        \"customerName\": \"Adolf Hitler\",\n        \"reservationReference\": \"8DBE514DFCB4F96\",\n        \"reservedAccountType\": 1,\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountNumber\": \"7880000024\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				}
			],
			"id": "6f4ca102-7d9c-47b7-83b3-809b06924c55"
		},
		{
			"name": "Get all reserved account",
			"item": [
				{
					"name": "Get all reserved account",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "839abfc0-4619-4bb5-b4a1-b00eac1375bb",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200, 'OK');",
									"})",
									"",
									"pm.test('hasResult should be equal to true', function () {",
									"    pm.expect(jsonData.hasResult).to.eql(true);",
									"})",
									"",
									"pm.test(\"result should not be empty\", function () {",
									"    pm.expect(jsonData.result.items).to.not.be.empty;",
									"});",
									"",
									"pm.test('resultType should be correct', function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(1);",
									"})",
									"",
									"pm.test('error message should be null', function () {",
									"    pm.expect(jsonData.message).to.eql(null);",
									"})",
									"",
									"pm.test('validation message should be null', function () {",
									"    pm.expect(jsonData.validationMessages).to.be.eql(null);",
									"})",
									"",
									"pm.test('Successfull field should be true', function () {",
									"    pm.expect(jsonData.successful).to.be.true;",
									"})",
									"",
									"pm.test('error code should equal 0', function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"})",
									"",
									"pm.test('response code should be null', function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "23bdae7d-ef44-4f09-8c0c-1b904f5b2306",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans/all/{{page}}/{{pageSize}}/{{filter}}"
					},
					"response": [
						{
							"id": "56125025-cfcf-4774-8849-ed3082d54f94",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/virtual-nubans/all/{{page}}/{{pageSize}}/{{filter}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "992"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:29:41 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"items\": [\n            {\n                \"merchantName\": null,\n                \"dateCreated\": \"2023-11-11T18:48:38.138051\",\n                \"id\": \"fa615bbf-cc1c-4e8f-b4d9-9ec216770d5d\",\n                \"isActive\": true,\n                \"merchantId\": 1,\n                \"accountReference\": \"070627654372\",\n                \"bvn\": \"233444444445\",\n                \"accountName\": \"Matthew Adeniyi\",\n                \"customerEmail\": \"matmape10@gmail.com\",\n                \"customerName\": \"Matthew Adeniyi\",\n                \"reservationReference\": \"8DBE2E6D230BF5E\",\n                \"reservedAccountType\": 2,\n                \"bankCode\": null,\n                \"bankName\": null,\n                \"accountNumber\": \"7880000011\"\n            },\n            {\n                \"merchantName\": null,\n                \"dateCreated\": \"2023-11-14T13:23:21.979545\",\n                \"id\": \"d7801515-e0e8-4451-b467-8198941f5fee\",\n                \"isActive\": true,\n                \"merchantId\": 1,\n                \"accountReference\": \"2327323232\",\n                \"bvn\": \"\",\n                \"accountName\": \"Adolf Hitler\",\n                \"customerEmail\": \"leavemebe@gi.go\",\n                \"customerName\": \"Adolf Hitler\",\n                \"reservationReference\": \"8DBE514DFCB4F96\",\n                \"reservedAccountType\": 1,\n                \"bankCode\": null,\n                \"bankName\": null,\n                \"accountNumber\": \"7880000024\"\n            }\n        ],\n        \"total\": 2,\n        \"info\": 0\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Get all reserved account Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "839abfc0-4619-4bb5-b4a1-b00eac1375bb",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200, 'OK');",
									"})",
									"",
									"pm.test('hasResult should be equal to true', function () {",
									"    pm.expect(jsonData.hasResult).to.eql(true);",
									"})",
									"",
									"pm.test(\"result should not be empty\", function () {",
									"    pm.expect(jsonData.result.items).to.not.be.empty;",
									"});",
									"",
									"pm.test('resultType should be correct', function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(1);",
									"})",
									"",
									"pm.test('error message should be null', function () {",
									"    pm.expect(jsonData.message).to.eql(null);",
									"})",
									"",
									"pm.test('validation message should be null', function () {",
									"    pm.expect(jsonData.validationMessages).to.be.eql(null);",
									"})",
									"",
									"pm.test('Successfull field should be true', function () {",
									"    pm.expect(jsonData.successful).to.be.true;",
									"})",
									"",
									"pm.test('error code should equal 0', function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"})",
									"",
									"pm.test('response code should be null', function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"})",
									"",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "fbe33d5e-901b-4e1f-9e65-a7cdaedf48af",
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"id": "fb28a719-a907-4bd9-b400-17f81ded1094",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "GET",
						"header": [
							{
								"key": "x-api-key",
								"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans/merchant/all/{{page}}/{{pageSize}}/{{filter}}"
					},
					"response": [
						{
							"id": "6fa66229-48ac-4f4b-bd5e-56085136ca2c",
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"url": "{{baseUrl}}/api/virtual-nubans/all/{{page}}/{{pageSize}}/{{filter}}"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "992"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:29:41 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"items\": [\n            {\n                \"merchantName\": null,\n                \"dateCreated\": \"2023-11-11T18:48:38.138051\",\n                \"id\": \"fa615bbf-cc1c-4e8f-b4d9-9ec216770d5d\",\n                \"isActive\": true,\n                \"merchantId\": 1,\n                \"accountReference\": \"070627654372\",\n                \"bvn\": \"233444444445\",\n                \"accountName\": \"Matthew Adeniyi\",\n                \"customerEmail\": \"matmape10@gmail.com\",\n                \"customerName\": \"Matthew Adeniyi\",\n                \"reservationReference\": \"8DBE2E6D230BF5E\",\n                \"reservedAccountType\": 2,\n                \"bankCode\": null,\n                \"bankName\": null,\n                \"accountNumber\": \"7880000011\"\n            },\n            {\n                \"merchantName\": null,\n                \"dateCreated\": \"2023-11-14T13:23:21.979545\",\n                \"id\": \"d7801515-e0e8-4451-b467-8198941f5fee\",\n                \"isActive\": true,\n                \"merchantId\": 1,\n                \"accountReference\": \"2327323232\",\n                \"bvn\": \"\",\n                \"accountName\": \"Adolf Hitler\",\n                \"customerEmail\": \"leavemebe@gi.go\",\n                \"customerName\": \"Adolf Hitler\",\n                \"reservationReference\": \"8DBE514DFCB4F96\",\n                \"reservedAccountType\": 1,\n                \"bankCode\": null,\n                \"bankName\": null,\n                \"accountNumber\": \"7880000024\"\n            }\n        ],\n        \"total\": 2,\n        \"info\": 0\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				}
			],
			"id": "14322bb6-e895-4b44-9c46-0b3b1e1886b5"
		},
		{
			"name": "Test Funding",
			"item": [
				{
					"name": "Test Funding",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d174544b-e73c-4aac-9b03-f3e726991aa3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200, 'OK');",
									"})",
									"",
									"pm.test('hasResult should be equal to true', function () {",
									"    pm.expect(jsonData.hasResult).to.eql(true);",
									"})",
									"",
									"pm.test(\"result should not be empty\", function () {",
									"    pm.expect(jsonData.result).to.not.be.empty;",
									"});",
									"pm.test(\"transactionReference should be a string and not be empty\", function () {",
									"    pm.expect(jsonData.result.transactionReference).to.be.a(\"string\").and.to.not.be.empty;;",
									"});",
									"pm.test(\"notificationLogId should not be empty\", function () {",
									"    pm.expect(jsonData.result.notificationLogId).to.be.a(\"string\").and.to.not.be.empty;",
									"});",
									"pm.test(\"responseMessage should not be empty\", function () {",
									"    pm.expect(jsonData.result.responseMessage).to.eql(\"Transaction Acknowledged\");",
									"});",
									"",
									"pm.test('resultType should be correct', function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(1);",
									"})",
									"",
									"pm.test('error message should be null', function () {",
									"    pm.expect(jsonData.message).to.eql(null);",
									"})",
									"",
									"pm.test('validation message should be null', function () {",
									"    pm.expect(jsonData.validationMessages).to.be.eql(null);",
									"})",
									"",
									"pm.test('Successfull field should be true', function () {",
									"    pm.expect(jsonData.successful).to.be.true;",
									"})",
									"",
									"pm.test('error code should equal 0', function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"})",
									"",
									"pm.test('response code should be null', function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "6a84f7c3-cfa2-4a57-b6cc-955d809bf372",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/transaction-notification-fund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transaction-notification-fund"
							],
							"query": [
								{
									"key": "x-api-key",
									"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "e0d5d538-783e-47e0-bfc9-ba29629e8807",
							"name": "Test Funding",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/transaction-notification-fund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"transaction-notification-fund"
									],
									"query": [
										{
											"key": "x-api-key",
											"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 15 Nov 2023 14:08:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"transactionReference\": \"110072231115140856780441776783\",\n        \"responseMessage\": \"Transaction Acknowledged\",\n        \"notificationLogId\": \"b94b991c-fbdc-46a8-8ad0-f52fdf89f328\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Test Funding - Mismatched beneficiary account number and name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d174544b-e73c-4aac-9b03-f3e726991aa3",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"Result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(2);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Account not found');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages).to.be.eql(null);",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "88bf5b62-fe0e-42b6-bec0-95f7d85773d3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000028\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/transaction-notification-fund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transaction-notification-fund"
							],
							"query": [
								{
									"key": "x-api-key",
									"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "f6a2c3c1-dfb6-4440-8479-6ab89048e578",
							"name": "Test Funding",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/transaction-notification-fund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"transaction-notification-fund"
									],
									"query": [
										{
											"key": "x-api-key",
											"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 15 Nov 2023 14:08:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"transactionReference\": \"110072231115140856780441776783\",\n        \"responseMessage\": \"Transaction Acknowledged\",\n        \"notificationLogId\": \"b94b991c-fbdc-46a8-8ad0-f52fdf89f328\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Test Funding - no beneficiary account name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d174544b-e73c-4aac-9b03-f3e726991aa3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.eql(\"The BeneficiaryAccountName field is required.\");",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "cc8f54cf-baee-47b2-92a6-b54fa580a562",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"beneficiaryAccountName\": \"\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/transaction-notification-fund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transaction-notification-fund"
							],
							"query": [
								{
									"key": "x-api-key",
									"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "d958d73d-8c2e-4ff2-9fac-f8292902239b",
							"name": "Test Funding",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/transaction-notification-fund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"transaction-notification-fund"
									],
									"query": [
										{
											"key": "x-api-key",
											"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 15 Nov 2023 14:08:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"transactionReference\": \"110072231115140856780441776783\",\n        \"responseMessage\": \"Transaction Acknowledged\",\n        \"notificationLogId\": \"b94b991c-fbdc-46a8-8ad0-f52fdf89f328\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Test Funding - no beneficiary account number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d174544b-e73c-4aac-9b03-f3e726991aa3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.eql(\"The BeneficiaryAccountNumber field is required.\");",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b0b54647-ee98-4112-87c2-66a019140166",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/transaction-notification-fund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transaction-notification-fund"
							],
							"query": [
								{
									"key": "x-api-key",
									"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "d8da121d-659b-497c-9262-6d5ad5713559",
							"name": "Test Funding",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/transaction-notification-fund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"transaction-notification-fund"
									],
									"query": [
										{
											"key": "x-api-key",
											"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 15 Nov 2023 14:08:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"transactionReference\": \"110072231115140856780441776783\",\n        \"responseMessage\": \"Transaction Acknowledged\",\n        \"notificationLogId\": \"b94b991c-fbdc-46a8-8ad0-f52fdf89f328\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Test Funding - mismatched  originator account number and name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d174544b-e73c-4aac-9b03-f3e726991aa3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(2);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Account not found');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages).to.be.eql(null);",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "57453f21-88c4-4400-8053-ff1b6591ca67",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7810000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0230901229\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/transaction-notification-fund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transaction-notification-fund"
							],
							"query": [
								{
									"key": "x-api-key",
									"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "e5d5e875-9e9a-4fe2-9f3d-f819c1709ccf",
							"name": "Test Funding",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/transaction-notification-fund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"transaction-notification-fund"
									],
									"query": [
										{
											"key": "x-api-key",
											"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 15 Nov 2023 14:08:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"transactionReference\": \"110072231115140856780441776783\",\n        \"responseMessage\": \"Transaction Acknowledged\",\n        \"notificationLogId\": \"b94b991c-fbdc-46a8-8ad0-f52fdf89f328\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Test Funding - no originator account number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d174544b-e73c-4aac-9b03-f3e726991aa3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.eql(\"The OriginatorAccountNumber field is required.\");",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b0514f70-e25d-4684-975b-a6624840e589",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/transaction-notification-fund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transaction-notification-fund"
							],
							"query": [
								{
									"key": "x-api-key",
									"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "b138d807-5b7d-47ae-807e-97ebb44ab07f",
							"name": "Test Funding",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/transaction-notification-fund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"transaction-notification-fund"
									],
									"query": [
										{
											"key": "x-api-key",
											"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 15 Nov 2023 14:08:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"transactionReference\": \"110072231115140856780441776783\",\n        \"responseMessage\": \"Transaction Acknowledged\",\n        \"notificationLogId\": \"b94b991c-fbdc-46a8-8ad0-f52fdf89f328\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Test Funding - no originator account name",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d174544b-e73c-4aac-9b03-f3e726991aa3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.eql(\"The OriginatorAccountName field is required.\");",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "f193c74a-1f2c-4f89-be7a-ff2d269e0c4e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/transaction-notification-fund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transaction-notification-fund"
							],
							"query": [
								{
									"key": "x-api-key",
									"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "462132f4-bb28-4870-afac-0b8abd37024c",
							"name": "Test Funding",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/transaction-notification-fund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"transaction-notification-fund"
									],
									"query": [
										{
											"key": "x-api-key",
											"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 15 Nov 2023 14:08:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"transactionReference\": \"110072231115140856780441776783\",\n        \"responseMessage\": \"Transaction Acknowledged\",\n        \"notificationLogId\": \"b94b991c-fbdc-46a8-8ad0-f52fdf89f328\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Test Funding - no narration",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d174544b-e73c-4aac-9b03-f3e726991aa3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.eql(\"The Narration field is required.\");",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e192f246-921c-4259-8b18-5c0b141afea0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/transaction-notification-fund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transaction-notification-fund"
							],
							"query": [
								{
									"key": "x-api-key",
									"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "659d6617-b4f8-4288-88b5-77f2df5c691a",
							"name": "Test Funding",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/transaction-notification-fund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"transaction-notification-fund"
									],
									"query": [
										{
											"key": "x-api-key",
											"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 15 Nov 2023 14:08:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"transactionReference\": \"110072231115140856780441776783\",\n        \"responseMessage\": \"Transaction Acknowledged\",\n        \"notificationLogId\": \"b94b991c-fbdc-46a8-8ad0-f52fdf89f328\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Test Funding - no payment reference",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d174544b-e73c-4aac-9b03-f3e726991aa3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.eql(\"The PaymentReference field is required.\");",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "fc356e42-8393-4541-b14f-3f605bea3df6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"\",\r\n  \"amount\": 100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/transaction-notification-fund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transaction-notification-fund"
							],
							"query": [
								{
									"key": "x-api-key",
									"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "a5d8527c-68d7-4f51-8cce-fc3e9074a04f",
							"name": "Test Funding",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/transaction-notification-fund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"transaction-notification-fund"
									],
									"query": [
										{
											"key": "x-api-key",
											"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 15 Nov 2023 14:08:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"transactionReference\": \"110072231115140856780441776783\",\n        \"responseMessage\": \"Transaction Acknowledged\",\n        \"notificationLogId\": \"b94b991c-fbdc-46a8-8ad0-f52fdf89f328\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Test Funding - no amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d174544b-e73c-4aac-9b03-f3e726991aa3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.eql(\"Error converting value {null} to type 'System.Decimal'. Path 'amount', line 8, position 16.\");",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3e245f40-d866-4be1-b48f-b7b21ba698c9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": null\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/transaction-notification-fund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transaction-notification-fund"
							],
							"query": [
								{
									"key": "x-api-key",
									"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "70a83cd9-95ca-4226-a425-9c3fcf4cd537",
							"name": "Test Funding",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/transaction-notification-fund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"transaction-notification-fund"
									],
									"query": [
										{
											"key": "x-api-key",
											"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 15 Nov 2023 14:08:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"transactionReference\": \"110072231115140856780441776783\",\n        \"responseMessage\": \"Transaction Acknowledged\",\n        \"notificationLogId\": \"b94b991c-fbdc-46a8-8ad0-f52fdf89f328\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Test Funding - negative amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d174544b-e73c-4aac-9b03-f3e726991aa3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.eql(\"The field Amount must be between 1 and 2147483647.\");",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "00592053-10be-4eb3-8e0a-2badcbd5c907",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": -100\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/transaction-notification-fund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transaction-notification-fund"
							],
							"query": [
								{
									"key": "x-api-key",
									"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "076db732-7f8b-4b27-8a53-af99a5271b6a",
							"name": "Test Funding",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/transaction-notification-fund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"transaction-notification-fund"
									],
									"query": [
										{
											"key": "x-api-key",
											"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 15 Nov 2023 14:08:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"transactionReference\": \"110072231115140856780441776783\",\n        \"responseMessage\": \"Transaction Acknowledged\",\n        \"notificationLogId\": \"b94b991c-fbdc-46a8-8ad0-f52fdf89f328\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Test Funding - invalid amount",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d174544b-e73c-4aac-9b03-f3e726991aa3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.eql(\"Input string '100a' is not a valid decimal. Path 'amount', line 8, position 16.\");",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "603ae989-e4a7-46f6-92ab-f2d036647fcf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100a\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/transaction-notification-fund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transaction-notification-fund"
							],
							"query": [
								{
									"key": "x-api-key",
									"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "59043370-7e57-49df-b294-809899871fac",
							"name": "Test Funding",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/transaction-notification-fund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"transaction-notification-fund"
									],
									"query": [
										{
											"key": "x-api-key",
											"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 15 Nov 2023 14:08:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"transactionReference\": \"110072231115140856780441776783\",\n        \"responseMessage\": \"Transaction Acknowledged\",\n        \"notificationLogId\": \"b94b991c-fbdc-46a8-8ad0-f52fdf89f328\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				},
				{
					"name": "Test Funding - invalid amount format",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d174544b-e73c-4aac-9b03-f3e726991aa3",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400, \"Bad Request\");",
									"});",
									"",
									"pm.test(\"hasResult should be equal to false\", function () {",
									"    pm.expect(jsonData.hasResult).to.eql(false);",
									"});",
									"",
									"pm.test(\"result should be null\", function () {",
									"    pm.expect(jsonData.result).to.be.null;",
									"});",
									"",
									"pm.test(\"resultType should be correct\", function () {",
									"    pm.expect(jsonData.resultType).to.be.an('number').and.to.eql(3);",
									"});",
									"",
									"pm.test(\"error message should be correct\", function () {",
									"    pm.expect(jsonData.message).to.eql('Response has validation errors');",
									"});",
									"",
									"pm.test(\"validation message should be correct\", function () {",
									"    pm.expect(jsonData.validationMessages[0]).to.be.eql(\"Could not convert string to decimal: 100a. Path 'amount', line 8, position 18.\");",
									"});",
									"",
									"pm.test(\"Successfull field should be null\", function () {",
									"    pm.expect(jsonData.successful).to.be.false;",
									"});",
									"",
									"pm.test(\"error code should equal 0\", function () {",
									"    pm.expect(jsonData.errorCode).to.eql(0);",
									"});",
									"",
									"pm.test(\"response code should be null\", function () {",
									"    pm.expect(jsonData.responseCode).to.eql(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "2055a6f2-df55-4485-929b-6017143be0cd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{apiKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": '100a'\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/transaction-notification-fund",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"transaction-notification-fund"
							],
							"query": [
								{
									"key": "x-api-key",
									"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"id": "ce593c65-6683-488e-b536-8ebac1ae375a",
							"name": "Test Funding",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"beneficiaryAccountName\": \"Matthew\",\r\n  \"beneficiaryAccountNumber\": \"7880000024\",\r\n  \"originatorAccountName\": \"Matthew Idowu\",\r\n  \"originatorAccountNumber\": \"0220901228\",\r\n  \"narration\": \"this is a trest\",\r\n  \"paymentReference\": \"Testrefere\",\r\n  \"amount\": 100\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/transaction-notification-fund",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"transaction-notification-fund"
									],
									"query": [
										{
											"key": "x-api-key",
											"value": "SQVXUHz9fsfV1SOD3Rjy31Zp7qJYlE11raImdmR2",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Wed, 15 Nov 2023 14:08:57 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "297"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"transactionReference\": \"110072231115140856780441776783\",\n        \"responseMessage\": \"Transaction Acknowledged\",\n        \"notificationLogId\": \"b94b991c-fbdc-46a8-8ad0-f52fdf89f328\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				}
			],
			"id": "fe32e1c4-c33c-4e32-a5b9-eaf943e3d0bc"
		},
		{
			"name": "For New Merchant",
			"item": [
				{
					"name": "Authorization - New Merchant",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "cebe1a17-77c9-4221-a285-ea460e7f2324",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2233a967-98ba-4cb4-9fde-ee313aca7522",
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"token\", jsonData.access_token); \r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Access token is present in the response\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token).to.not.be.empty;\r",
									"});\r",
									"\r",
									"pm.test(\"Access token is a non-empty string\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.access_token).to.be.a('string').and.to.not.be.empty;\r",
									"});\r",
									"pm.test(\"token type  equals 'Bearer'\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token_type).to.be.a('string').and.to.eql(\"Bearer\");\r",
									"});\r",
									"pm.test(\"Scope equals 'api1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.scope).to.be.a('string').and.to.eql(\"api1\");\r",
									"});\r",
									"pm.test(\"token expires in 3600\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.expires_in).to.eql(3600);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "ef861d75-422d-447b-9562-0d47d93b4f1c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "{{VNapiKey}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "client_id",
									"value": "{{VNclientId}}",
									"type": "text"
								},
								{
									"key": "client_secret",
									"value": "{{VNclientSecret}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								}
							]
						},
						"url": "{{authUrl}}/connect/token",
						"description": "Content-type: application/x-www-form-urlencoded"
					},
					"response": [
						{
							"id": "169efd6b-685e-4cc1-a404-9843d201d9e2",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "{{clientId}}",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "{{clientSecret}}",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										}
									]
								},
								"url": "{{authUrl}}/connect/token"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=UTF-8"
								},
								{
									"key": "Content-Length",
									"value": "792"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amzn-RequestId",
									"value": "7ab5970d-5eea-4a46-a78c-10bbce8d1d55"
								},
								{
									"key": "x-amzn-Remapped-Content-Length",
									"value": "792"
								},
								{
									"key": "x-amzn-Remapped-Connection",
									"value": "keep-alive"
								},
								{
									"key": "x-amz-apigw-id",
									"value": "OY38lEFWDoEEYBA="
								},
								{
									"key": "x-amzn-Remapped-Server",
									"value": "Kestrel"
								},
								{
									"key": "Cache-Control",
									"value": "no-store, no-cache, max-age=0"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "x-amzn-Remapped-Date",
									"value": "Tue, 14 Nov 2023 12:50:37 GMT"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"access_token\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6IkY2NjEzRENFNkVCQzBFNkNEODBCMzc1ODM5NjRDQjZBIiwidHlwIjoiYXQrand0In0.eyJuYmYiOjE2OTk5NjYyMzcsImV4cCI6MTY5OTk2OTgzNywiaXNzIjoiaHR0cHM6Ly9pZGVudGl0eS1kZXYuYmFuazc4LmNvIiwiYXVkIjoiYXBpMSIsImNsaWVudF9pZCI6IjJFOUZEQzEzMkMyMzQ0MTQ4QkVGNzk4NTFCNDgxNTkxIiwianRpIjoiOTNENUM0OTRFQjk3RDcwOTlDQzZCNUVDNzRBMTc0NzMiLCJpYXQiOjE2OTk5NjYyMzcsInNjb3BlIjpbImFwaTEiXX0.lfmgkLXkxyx8p96_L_Wbvl_7fS1XaxGSLsXGbILoYShkvUWGvNw37DQ3SjVEWhbzOLKGeaaE0EuJSTnCDTc8IWBpEh7797E7dXoggF5SM-H6zuQs6LJ51z1IqJLcaxzOIoJc6PVY3NlcA2wyIzw7gRlw7tIS0SAe-hacm4PhtTUOf4R3ag1100uH60NPaM7UrezXRxGiXNO6lY30gMchrM0i8NW41j-Zzrr_Tb_PwPT9qlZBZWCK99PGCZnLhCgKNq5TbMXtDGJYYhzT7KmmNoS5rE4JjKHhfypcXBeJidOD7kca_irWhOd2UPExgygh4C_H6SsGugAY_vLXAiJGrw\",\n    \"expires_in\": 3600,\n    \"token_type\": \"Bearer\",\n    \"scope\": \"api1\"\n}"
						}
					]
				},
				{
					"name": "Reserve an account - New Mechant",
					"id": "10990485-20ce-446d-9dfe-1414595b9b26",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{token}}"
							}
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "h9tRbOJzcH9O8mDsWRVey6OimYrqYUdg4c4IKNTf"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"accountReference\": \"Test{{$randomAlphaNumeric}}\",//required\r\n  \"accountName\": \"Telly Rohan Test\",//required\r\n  \"emailAddress\": \"\",//optional\r\n  \"phoneNumber\": \"\",//optional\r\n  \"bvn\": \"\",//optional\r\n  \"accountType\": 2,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2024-06-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{baseUrl}}/api/virtual-nubans"
					},
					"response": [
						{
							"id": "3b0230c8-23bd-4b11-81f4-5a7bd456d265",
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-api-key",
										"value": "{{apiKey}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"accountReference\": \"{{account reference}}\",//required\r\n  \"accountName\": \"{{account Name}}\",//required\r\n  \"emailAddress\": \"{{email address}}\",//optional\r\n  \"phoneNumber\": \"{{phone number}}\",//optional\r\n  \"bvn\": \"{{bvn}}\",//optional\r\n  \"accountType\": 1,// 1 for static, 2 for dynamic,\r\n  \"expiresOn\": \"2023-11-13T12:04:59.460Z\",//for dynamic, must set an expiry date\r\n  \"customerGeneratedNuban\": null//if you want to use existing account number or phone number, pass this field, else leave empty or null or remove property\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{baseUrl}}/api/virtual-nubans"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Length",
									"value": "323"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Tue, 14 Nov 2023 13:23:23 GMT"
								},
								{
									"key": "Server",
									"value": "Kestrel"
								}
							],
							"cookie": [],
							"responseTime": null,
							"body": "{\n    \"hasResult\": true,\n    \"result\": {\n        \"merchantId\": 1,\n        \"accountNumber\": \"{{new account number}}\",4\n        \"reservationReference\": \"{{reservation number}}\",\n        \"accountReference\": \"2327323232\",\n        \"bankCode\": \"123456\",\n        \"bankName\": \"Bank78\",\n        \"accountName\": \"Adolf Hitler\"\n    },\n    \"resultType\": 1,\n    \"message\": null,\n    \"validationMessages\": null,\n    \"successful\": true,\n    \"errorCode\": 0,\n    \"responseCode\": null\n}"
						}
					]
				}
			],
			"id": "e1391bc8-fd6e-4c1e-98be-8abdee080ed1"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "c9bb332e-e276-4fad-afce-c80faf9f88f9"
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				],
				"id": "e73dd7cf-087f-4a0c-bf08-d4c51062b42c"
			}
		}
	],
	"variable": [
		{
			"key": "authUrl",
			"value": "https://sandbox.bank78.co/identity",
			"type": "string"
		},
		{
			"key": "apiKey",
			"value": "3guOFEYgOM8ad1dk7szcb9Q3tv6nSNVA6nEUFS00",
			"type": "string"
		},
		{
			"key": "clientId",
			"value": "2E9FDC132C2344148BEF79851B481591",
			"type": "string"
		},
		{
			"key": "clientSecret",
			"value": "2B23E6C0ABA240ACA572C59CEDAAA080",
			"type": "string"
		},
		{
			"key": "token",
			"value": "\"\"",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "https://sandbox.bank78.co/virtual-nuban",
			"type": "string"
		},
		{
			"key": "accountRef",
			"value": "2327323232",
			"type": "string"
		},
		{
			"key": "page",
			"value": "1",
			"type": "string"
		},
		{
			"key": "pageSize",
			"value": "10",
			"type": "string"
		},
		{
			"key": "filter",
			"value": "{}",
			"type": "string"
		},
		{
			"key": "accountNumber",
			"value": "7880000024",
			"type": "string"
		}
	]
}